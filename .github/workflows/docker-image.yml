name: Deploy Node.js Server to Server via Docker

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # 4. 登录 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 5. 构建 Docker 镜像
      - name: Build Docker image
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2 | sed 's/\.git$//')
          IMAGE_NAME="${REPO_NAME}-server"
          echo "构建镜像: ${IMAGE_NAME}"
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${IMAGE_NAME}:latest .

      # 6. 推送 Docker 镜像
      - name: Push Docker image
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2 | sed 's/\.git$//')
          IMAGE_NAME="${REPO_NAME}-server"
          echo "推送镜像: ${IMAGE_NAME}"
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${IMAGE_NAME}:latest

      # 7. 部署到服务器
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www/server-app
            cd /var/www/server-app || exit 1

            REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | sed 's/\.git$//')
            IMAGE_NAME="${REPO_NAME}-server"
            FULL_IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/${IMAGE_NAME}:latest"

            echo "部署镜像: ${FULL_IMAGE_NAME}"

            # 拉取最新镜像
            docker pull ${FULL_IMAGE_NAME}

            # 停止并移除旧容器
            docker stop ${IMAGE_NAME} || echo "容器不存在，无需停止"
            docker rm ${IMAGE_NAME} || echo "容器不存在，无需移除"

            # 清理悬空镜像
            docker image prune -f

            # 运行新容器
            docker run -d \
              --name ${IMAGE_NAME} \
              --restart=always \
              -p 7005:7001 \
              -e NODE_ENV=prod \
              ${FULL_IMAGE_NAME}